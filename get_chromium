#!/usr/bin/env ruby
#
# get_chromium
#
# Copyright (c) 2009 Sid Carter
# licensed under the BSD license.
# 
#
# Date: 2009-06-16 10:43:31 +1200 (Tue, 16 Jun 2009)
# 
# Modified by ashwinks
#
 
require 'net/http'
require 'rubygems'
require 'plist'

tmp_dir="/tmp/"

# Settings that shouldn't change in the future, but could :D
remote_site="build.chromium.org"
remote_folder="/buildbot/snapshots/chromium-rel-mac/"

pkg_file="chrome-mac.zip"
pkg_dir="chrome-mac/"
pkg_name="Chromium.app"
plist_file="/Contents/Info.plist"
latest_version=nil
version_file="LATEST"

# Ideally you would only need to change the one variable below for your specific environment
# There should be a trailing slash
# For e.g. app_dir="/Applications/"
app_dir="/Volumes/Marge/Applications/"

current=Plist::parse_xml(app_dir+pkg_name+plist_file)
current_version=current['SVNRevision'] if current

# Subroutine to download chromium
def download_chromium(site,source,destination)
  
  print "Downloading Chromium... please wait...\n"
	Net::HTTP.start(site,80) do |remote|
		download=remote.get(source)
		open(destination,"wb") do |file|
			file.write(download.body)
		end
	end
	
end

# Let's get the latest version number to begin with  
Net::HTTP.start(remote_site,80) do |remote|
	latest_version=remote.get(remote_folder+version_file).body
end

remote_file_path=remote_folder+latest_version+"/"+pkg_file

if current.nil?
  print "Chromium is not installed.\n"
elsif latest_version > current_version
	print "New Version of Chromium Available.\n" 
elsif latest_version == current_version
	print "Latest Version of Chromium already installed.\n"
	exit
end

print "Would you like to download the latest version of Chromium (y/n) ? "
response = gets.chomp

if response == 'y'
  if current_version
    begin
      print "Deleting old version in #{app_dir}...\n"
      FileUtils.remove_entry_secure(app_dir+pkg_name,:force=>true, :verbose => true)
    rescue ArgumentError
      print "Oops! Encountered a problem deleting the older version. Check permissions on #{app_dir}.\n" 
    end
    print "Old Version of Chromium Deleted.\n"
  end
  
  print "Deleting old versions in #{tmp_dir}...\n"
  FileUtils.remove_entry_secure(tmp_dir+pkg_file,:force=>true, :verbose => true)
  FileUtils.remove_entry_secure(tmp_dir+pkg_dir,:force=>true, :verbose => true)
  FileUtils.remove_entry_secure(tmp_dir+pkg_dir+pkg_name,:force=>true, :verbose => true)
  download_chromium(remote_site,remote_file_path,tmp_dir+pkg_file)
  
  print "Unzipping new version...\n"
  # The following line is the unclean part of this script. Extracting using rubyzip appears to have some problems
  system("unzip","-qq",tmp_dir+pkg_file,"-d", tmp_dir)
  
  print "Installing new version...\n"
  FileUtils.mv(tmp_dir+pkg_dir+pkg_name, app_dir, :force => false, :verbose => true)
  print "New version is ready to be used.\n"
end
